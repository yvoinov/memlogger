10-11-2020
==========
Initial code written.

11-29-2020
==========
FIX: Logger format %d to %lu.
FIX: warning: "std::fstream {anonymous}::FileForReadWrite::fd [-Wreorder]"
FIX: Class MemoryFunctions must me instantiated on each hooked function to prevent segfault on dlsym() call.

11-30-2020
==========
IMPROVEMENT: Added static buffer for output to avoid malloc.
FIX: Removed calloc overriding due to dlsym() implementations with 32 bytes calloc, which can lead to endless recursion;
     due to calloc implementations uses malloc in most cases, this do not skew overall statistics.
     However, this leads better compatibility with different libC/glibC.
IMPROVEMENT: Added --enable-static-libs configuration option to build reporting tool static.

12-07-2020
==========
IMPROVEMENT: Timing added.
IMPROVEMENT: Empty results array processing.
FIX: Typo in printReport(), allc_more not counted.
FIX: Division by zero.

04-02-2021
==========
IMPROVEMENT: Logger library refactoring.

04-05-2021
==========
FIX: Protect output with lock to prevent interleaving with threaded environment.

04-06-2021
==========
FIX: Crash reporter on garbage in memory logs.

04-07-2021
==========
IMPROVEMENT: Logger refactored.
FIX: Some minor fixes.
FIX: Crash on empty log lines.

04-09-2021
==========
IMPROVEMENT: Speed up processing ~20%.

04-12-2021
==========
FIX: Borders of ranges.

04-14-2021
==========
IMPROVEMENT: Reporter refactored.

04-15-2021
==========
FIX: Bug with overwriting output file.

04-17-2021
==========
IMPROVEMENT: A bit more optimization of reporting tool.
FIX: Code formatting.

04-18-2021
==========
IMPROVEMENT: Reporter reworked.

04-25-2021
==========
IMPROVEMENT: Uses std::stoul() for string conversion.

04-28-2021
==========
IMPROVEMENT: Got rid unnesessary implicit type conversion.

05-12-2021
==========
IMPROVEMENT: processData() refactored to reduce unnesessary movements.
FIX: Added missed header inclusion.

05-15-2021
==========
IMPROVEMENT: Reporter reworked; performance improvement.

05-16-2021
==========
FIX: Move unnesessary globals to private.

05-23-2021
==========
IMPROVEMENT: Hide all globals into private.

05-27-2021
==========
IMPROVEMENT: Added conrer case condition to fillArrayEntry().
IMPROVEMENT: Got rid stupid pass by reference for timestamp.
FIX: Warning "Likely uninitialized read (variable v_sum)".
FIX: MemoryLoggerFunctions reorder initialization warning.

05-30-2021
==========
IMPROVEMENT: Returned back correct implementation of calloc interposition.
FIX: Wrong counting inner malloc calls inside realloc&calloc.

05-31-2021
==========
IMPROVEMENT: Logger reworked with singleton pattern.

06-01-2021
==========
IMPROVEMENT: Feature added - log to file instead stderr.

06-10-2021
==========
IMPROVEMENT: Code restructured.

06-12-2021
==========
IMPROVEMENT: Move semantic implemented in fillArrayEntry().

06-19-2021
==========
IMPROVEMENT: Replaced C-style cast to C++.
IMPROVEMENT: Added compiler version check to headers.
FIX: Potential UB with casting a function pointer to a different function pointer.

06-20-2021
==========
IMPROVEMENT: Added print elapsed logging time.
FIX: "No other calls found" message output.
FIX: Minor wix with malloc function ptr argument.

07-19-2021
==========
IMPROVEMENT: Added max size feature.

08-09-2021
==========
IMPROVEMENT: Replaced C-array to std::array.
IMPROVEMENT: Max size feature now count over all logged allocations.
FIX: Segfault on mutex_lock_impl() calls and similar.

08-10-2021
==========
IMPROVEMENT: Do not log calloc() inner malloc() calls.
IMPROVEMENT: Performance malloc() internal processing.
FIX: Wrong counting if allocations fit one epoch tick.
FIX: Deadlock on __cxa_guard_acquire.

06-05-2022
==========
IMPROVEMENT: Completely reworked; memlogger-report log processor no more requires. Instant report with O(1) complexity.
IMPROVEMENT: Reduced counter array locking. Huge refactoring and optimization.
FIX: Hang on __futex_abstimed_wait_common () from /usr/lib/libc.so.6 on Linux.
FIX: warning: logical not is only applied to the left hand side of this comparison.
FIX: clang++: warning: -ldl: 'linker' input unused.

06-06-2022
==========
IMPROVEMENT: Refactored fillArrayEntry().
IMPROVEMENT: Refactored class MemoryLoggerFunctions.

06-07-2022
==========
FIX: Deadlock on __cxa_guard_acquire regression on file operation.

06-08-2022
==========
IMPROVEMENT: Made m_OutputFile, m_fd local.

06-11-2022
==========
IMPROVEMENT: Globals refactoring.

06-17-2022
==========
IMPROVEMENT: fillArrayEntry() refactoring. Now() made private.
FIX: Unnesessary defines deleted.

07-01-2022
==========
IMPROVEMENT: Made globals class members.

07-16-2022
==========
FIX: Minor code style fix.

07-17-2022
==========
IMPROVEMENT: Added rounding up allocation sizes up to a whole page of OS memory to make more accuracy.

07-26-2022
==========
FIX: Removed unnesessary function call from signal_handler().

07-27-2022
==========
IMPROVEMENT: Removed unnesessary code.

08-03-2022
==========
IMPROVEMENT: Max peak allocations per second added.
FIX: Regression introduced in 2.0.5.
FIX: Some minor bugs.

08-09-2022
==========
IMPROVEMENT: Refactoring.

08-12-2022
==========
IMPROVEMENT: Replaced sleep_for() to conditional variable wait to prevent delay on exit.

08-13-2022
==========
IMPROVEMENT: Added hh:mm:ss elapsed time format.

10-20-2022
==========
IMPROVEMENT: Added spurious wakeups protection.

10-22-2022
==========
IMPROVEMENT: AdaptiveSpinMutex improved.

10-26-2022
==========
IMPROVEMENT: Replaced wait_until to wait_for in timer thread.

12-23-2022
==========
IMPROVEMENT: Removed unnesessary return by reference.
IMPROVEMENT: Refactoring - templated main classes.

12-27-2022
==========
IMPROVEMENT: Refactoring.

01-03-2023
==========
IMPROVEMENT: Refactoring - made class AdaptiveSpinMutex inner.

01-03-2023
==========
IMPROVEMENT: More refactoring - the inner class is defined outside the body of the main class.

01-17-2023
==========
FIX: Partially rollback change 2.0.16 due to can cause deadlock on some OSes.

01-18-2023
==========
IMPROVEMENT: Refactoring.
IMPROVEMENT: Added periodically flush allocation report on disk when MEMLOGGER_LOG_FILENAME is specified.
IMPROVEMENT: Reduced data array locking.
IMPROVEMENT: Renamed shown peak values name.
FIX: Wrong peak values counting.
FIX: Peak values computing.

01-22-2023
==========
IMPROVEMENT: malloc_mf_impl() micro-optimization.

01-24-2023
==========
IMPROVEMENT: Replaced preprocessor defines with enum.
FIX: Dead code eliminated.

01-27-2023
==========
IMPROVEMENT: Decompose printReportTotal() function.
IMPROVEMENT: Memory functions names replaced to constexpr.

04-02-2023
==========
IMPROVEMENT: Moved interposition implementations to class.
IMPROVEMENT: Moved enum inside class.
FIX: Call non-constructed class member.

04-16-2023
==========
FIX: fillArrayEntry() moved to private.

04-08-2023
==========
FIX: Typo in README.

07-09-2023
==========
IMPROVEMENT: Rename spinlock CTor parameter.

08-03-2023
==========
IMPROVEMENT: Reworked template instantiation.

08-05-2023
==========
IMPROVEMENT: Added accumulators type to prevent possible wrap around with long sessions.

08-13-2023
==========
IMPROVEMENT: Refactoring - renamed main class.
IMPROVEMENT: Minor locality improvement.
IMPROVEMENT: Code formatting.

08-14-2023
==========
FIX: Local accumulators type.

08-15-2023
==========
IMPROVEMENT: Refactoring - avoid string CTors in decodeMemFunc().
IMPROVEMENT: Made enum explicit defined.

08-16-2023
==========
IMPROVEMENT: Made enum unsigned type.
IMPROVEMENT: Used std::time_t instead long for epoch.

08-18-2023
==========
FIX: Broken computePeakValue().

08-19-2023
==========
IMPROVEMENT: Better computeTotalLoggingTime() implementation.

08-21-2023
==========
IMPROVEMENT: Used steady_clock instead system_clock in Now().
FIX: Second workaround for *BSD compatibility (now FreeBSD only).
IMPROVEMENT: Added check libdl and set if found.

08-22-2023
==========
IMPROVEMENT: Best computeTotalLoggingTime() implementation.

08-23-2023
==========
FIX: Comment for Now().

08-24-2023
==========
IMPROVEMENT: Used arrays instead vectors in computeTotalLoggingTime().

08-25-2023
==========
FIX: min/max_element predicate logic.

08-27-2023
==========
IMPROVEMENT: Got rid unnesessary size() call.

08-28-2023
==========
FIX: Wrong comment.

08-28-2023
==========
IMPROVEMENT: Refactoring - got rid computeTotalLoggingTime() with loops.
IMPROVEMENT: Refactoring printReport().

08-31-2023
==========
IMPROVEMENT: Renamed and reworked class OnLoadInit to parametrized Timer.

09-04-2023
==========
IMPROVEMENT: Timer class made templated too.
IMPROVEMENT: Simplified condition in printReportTotal().

11-13-2023
==========
FIX: Segfault when hangup logging interactive session.

11-15-2023
==========
FIX: __cxa_guard_acquire deadlock on 5.x Linux kernels due to libC issue.

11-16-2023
==========
IMPROVEMENT: Code style.

11-30-2023
==========
IMPROVEMENT: Refactoring - less preprocessor code.

12-05-2023
==========
IMPROVEMENT: Replaced calloc() dlsym() hack to mmap() call.
FIX: mmap() calls just once.

12-16-2023
==========
IMPROVEMENT: Replaced enum to enum class.

12-24-2023
==========
FIX: Made Timer class compatible with some programs on Debian.

12-25-2023
==========
FIX: Small includes fix.

12-28-2023
==========
FIX: Possible UB.

12-31-2023
==========
IMPROVEMENT: Compiler -pthread flag set.
IMPROVEMENT: Explicit clang stdlib support.
FIX: Runtime error 'undefined symbol: _ZTINSt3__113basic_ostreamIcNS_11char_traitsIcEEEE' on Fedora/RH.
FIX: Clang compilation warning.

01-14-2024
==========
IMPROVEMENT: Correctly signalling timer thread to end.
